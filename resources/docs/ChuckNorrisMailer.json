{
    "openapi": "3.0.2",
    "info": {
        "title": "Chuck Norris Mailer",
        "description": "API for communication with frontend",
        "version": "1.4.0"
    },
    "paths": {
        "/api/emails": {
            "get": {
                "summary": "list all items with pagination",
                "operationId": "emails.index",
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "sort",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "description": "sort by key of the array is column name and the value is the direction asc or desc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "description": "the id of the record."
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "description": "the full email address."
                                                },
                                                "domain": {
                                                    "type": "string",
                                                    "description": "the domain of the main email address."
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "the first part of the email."
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "description": "timestampo."
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "description": "timestampo."
                                                }
                                            }
                                        },
                                        "next_page_url": {
                                            "type": "boolean",
                                            "nullable": true
                                        },
                                        "path": {
                                            "type": "string"
                                        },
                                        "prev_page_url": {
                                            "type": "integer",
                                            "nullable": true
                                        },
                                        "to": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/NotValid"
                    }
                },
                "tags": ["Shipping"]
            },
            "post": {
                "summary": "Stores an email.",
                "operationId": "emails.store",
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "email",
                        "style": "simple",
                        "required": true,
                        "description": "email value that the user inputs",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "isSuccess": {
                                            "type": "boolean",
                                            "required": true
                                        },
                                        "email": {
                                            "type": "object",
                                            "required": true,
                                            "properties": {
                                                "value": {
                                                    "type": "string",
                                                    "description": "email"
                                                },
                                                "domain": {
                                                    "type": "string",
                                                    "description": "the 2nd part of the email"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "the 1sr part of the email"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/NotValid"
                    }
                }
            }
        },
        "/api/emails/{email}": {
            "put": {
                "summary": "Updates an email by storing a message and sending an email.",
                "operationId": "emails.put",
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "email_save",
                        "style": "simple",
                        "required": true,
                        "description": "Receives an email and updates the resource",
                        "schema": {
                            "type": "integer",
                            "description": "id of email"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "properties": {
                                                "email_id": {
                                                    "type": "integer"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "description": "the joke from the api that was send."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/NotValid"
                    }
                },
                "tags": ["Product Variations"]
            }
        },
    },
    "components": {
        "schemas": {
        },
        "responses": {
            "UnauthorizedError": {
                "description": "Authentication information is missing or invalid",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "BadRequest": {
                "description": "Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Not Found. Unable to find requested resource",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "NotValid": {
                "description": "Request is not valid. Check a schema",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "errors": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "security": [
        {
            "basicAuth": []
        }
    ]
}
